<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Nathan's Blog</title><link>www.mayn.es/tags/python/</link><description>Recent content in python on Nathan's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 01 Aug 2020 03:02:22 +0000</lastBuildDate><atom:link href="www.mayn.es/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Speed Up Your REST Workflows with asyncio</title><link>www.mayn.es/2020/08/01/speed-up-your-rest-workflows-with-asyncio/</link><pubDate>Sat, 01 Aug 2020 03:02:22 +0000</pubDate><guid>www.mayn.es/2020/08/01/speed-up-your-rest-workflows-with-asyncio/</guid><description>I have been waiting for a project that would allow me to dig into the Python’s asyncio library. Recently, such a project presented itself. I was tasked with hitting a rate limited REST API with just under 4 million requests. My first attempt was simple. Gather and build a block of search queries, POST each one to the API, process the results, and finally insert them in a database. Here is what the code looked like:</description></item><item><title>A Simple Progress Bar in Python</title><link>www.mayn.es/2019/04/18/a-simple-progress-bar-in-python/</link><pubDate>Thu, 18 Apr 2019 18:33:32 +0000</pubDate><guid>www.mayn.es/2019/04/18/a-simple-progress-bar-in-python/</guid><description>Recently, I have been working with the Requestslibrary in Python. I wrote a simple function to pull down a file that took more than a minute to download. While waiting for the download to complete I realized it would be nice to have some insight into the download’s progress. A quick search on StackOverflow led to an excellent example. Below is a simple way to display a progress bar while downloading a file.</description></item></channel></rss>
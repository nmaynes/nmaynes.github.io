<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on Nathan's Blog</title><link>/categories/Tutorials/</link><description>Recent content in Tutorials on Nathan's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 30 Dec 2021 16:35:34 -0500</lastBuildDate><atom:link href="/categories/Tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Working With File Like Objects in Lambda</title><link>/post/2021-12-30-file-like-objects-in-lambda/</link><pubDate>Thu, 30 Dec 2021 16:35:34 -0500</pubDate><guid>/post/2021-12-30-file-like-objects-in-lambda/</guid><description>I recently started working on a workflow for picking up files from S3, processing them, and writing the results to another S3 location. This is a common pattern in data processing pipelines and our team wanted to see whether we could do it using AWS serverless services. We were able to get it running via Lambda functions and event triggers published to an AWS EventHub. The entire workflow was fairly easy to stand up once we grasped how the various services worked together.</description></item><item><title>Moving My Personal Blog From Wordpress to Hugo</title><link>/post/2021-08-16-moving-my-blog-to-hugo/</link><pubDate>Mon, 16 Aug 2021 11:13:00 -0400</pubDate><guid>/post/2021-08-16-moving-my-blog-to-hugo/</guid><description>I started the process of moving my personal blog over a year ago, when the global pandemic brought on by the COVID-19 virus sent my local area into lock down. The reasons for doing so were simple enough, my web hosting bill had grown north of $200 dollars a month for my personal blog. Don&amp;rsquo;t get me wrong, Wordpress is great! I just wanted to get my blog onto something more appropriate for the audience (read, pretty small).</description></item><item><title>Dynamically Set ORM Schemas via Sqlalchemy</title><link>/post/2021-04-03-dynamically-set-schemas-sqlalchemy/</link><pubDate>Sat, 03 Apr 2021 07:54:57 -0400</pubDate><guid>/post/2021-04-03-dynamically-set-schemas-sqlalchemy/</guid><description>Sometimes the solution to a problem is so obvious, it takes a while to figure it out. I recently stumbled on such a problem when trying to configure a set of Object Relational Mappings (ORM) to support an application with the same set of table objects across different schemas in Postgres. Developing an ORM to support this pattern, a multi-tenant database model, proved challenging because of where I started. Below, I will detail the correct way to support the multi-tenant pattern as well as various approaches I came across and why they should not be used.</description></item><item><title>Speed Up Your REST Workflows with asyncio</title><link>/2020/08/01/speed-up-your-rest-workflows-with-asyncio/</link><pubDate>Sat, 01 Aug 2020 03:02:22 +0000</pubDate><guid>/2020/08/01/speed-up-your-rest-workflows-with-asyncio/</guid><description>I have been waiting for a project that would allow me to dig into the Pythonâ€™s asyncio library. Recently, such a project presented itself. I was tasked with hitting a rate limited REST API with just under 4 million requests. My first attempt was simple. Gather and build a block of search queries, POST each one to the API, process the results, and finally insert them in a database. Here is what the code looked like:</description></item></channel></rss>